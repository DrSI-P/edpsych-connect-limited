/**
 * Represents a specific version of an algorithm in the licensing platform.
 * Each algorithm can have multiple versions that track changes, improvements,
 * and different implementations over time.
 */
export interface AlgorithmVersion {
  /** Unique identifier for the version */
  id: string;
  
  /** Reference to the parent algorithm */
  algorithmId: string;
  
  /** Version number (e.g., "1.0.0") following semantic versioning */
  version: string;
  
  /** Detailed description of this specific version */
  description: string;
  
  /** Release notes describing changes from previous version */
  releaseNotes: string;
  
  /** Creation timestamp */
  createdAt: Date;
  
  /** Published timestamp (when made available) */
  publishedAt?: Date;
  
  /** Status of this version */
  status: 'draft' | 'pending_review' | 'published' | 'deprecated' | 'rejected';
  
  /** Code/implementation URL or reference */
  implementationUrl: string;
  
  /** Optional documentation URL */
  documentationUrl?: string;
  
  /** Technical specifications */
  technicalSpecs: {
    /** Programming language used */
    language: string;
    
    /** Framework or libraries required */
    frameworks: string[];
    
    /** Minimum system requirements */
    systemRequirements: {
      cpu?: string;
      memory?: string;
      storage?: string;
      operatingSystem?: string[];
    };
    
    /** Expected performance metrics */
    performance?: {
      averageRuntime?: string;
      memoryUsage?: string;
      throughput?: string;
    };
    
    /** API specification format (if applicable) */
    apiSpecFormat?: 'REST' | 'GraphQL' | 'gRPC' | 'WebSocket' | 'Custom';
  };
  
  /** Input specifications */
  inputSpec: {
    /** Required data format */
    format: string;
    
    /** Schema definition */
    schema: any;
    
    /** Example inputs */
    examples: any[];
  };
  
  /** Output specifications */
  outputSpec: {
    /** Output data format */
    format: string;
    
    /** Schema definition */
    schema: any;
    
    /** Example outputs */
    examples: any[];
  };
  
  /** Compatibility information */
  compatibility: {
    /** Backward compatible with versions */
    backwardCompatibleWith: string[];
    
    /** Forward compatible with versions */
    forwardCompatibleWith: string[];
    
    /** Breaking changes from previous versions */
    breakingChanges: string[];
  };
  
  /** Test results and validation metrics */
  testResults: {
    /** Test coverage percentage */
    coverage?: number;
    
    /** Validation metrics */
    metrics?: Record<string, number>;
    
    /** Validation datasets used */
    validationDatasets?: string[];
    
    /** Overall test status */
    status: 'passed' | 'failed' | 'partial' | 'not_tested';
  };
  
  /** Security audit information */
  securityAudit?: {
    /** Audit completion status */
    completed: boolean;
    
    /** Audit completion date */
    date?: Date;
    
    /** Auditor information */
    auditor?: string;
    
    /** Vulnerabilities found and addressed */
    vulnerabilitiesAddressed?: string[];
    
    /** Security score (if applicable) */
    score?: number;
  };
  
  /** Ethics assessment */
  ethicsAssessment?: {
    /** Assessment completion status */
    completed: boolean;
    
    /** Assessment date */
    date?: Date;
    
    /** Identified ethical considerations */
    considerations?: string[];
    
    /** Mitigations implemented */
    mitigations?: string[];
  };
  
  /** Usage metrics for this specific version */
  metrics?: {
    /** Total times this version has been downloaded */
    downloads: number;
    
    /** Total times this version has been purchased */
    purchases: number;
    
    /** Total active instances of this version */
    activeInstances: number;
    
    /** Average rating for this version */
    averageRating?: number;
    
    /** Total revenue generated by this version */
    revenue?: number;
  };
}